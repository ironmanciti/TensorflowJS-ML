!function(t){var e={};function a(s){if(e[s])return e[s].exports;var n=e[s]={i:s,l:!1,exports:{}};return t[s].call(n.exports,n,n.exports,a),n.l=!0,n.exports}a.m=t,a.c=e,a.d=function(t,e,s){a.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:s})},a.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},a.t=function(t,e){if(1&e&&(t=a(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(a.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var n in t)a.d(s,n,function(e){return t[e]}.bind(null,n));return s},a.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return a.d(e,"a",e),e},a.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},a.p="",a(a.s=0)}([function(t,e,a){"use strict";a.r(e);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const s=784,n=10,i=65e3,r=Math.floor(5/6*i),o=i-r,c="https://storage.googleapis.com/learnjs-data/model-builder/mnist_images.png",l="https://storage.googleapis.com/learnjs-data/model-builder/mnist_labels_uint8";class d{constructor(){this.shuffledTrainIndex=0,this.shuffledTestIndex=0}async load(){const t=new Image,e=document.createElement("canvas"),a=e.getContext("2d"),d=new Promise((n,r)=>{t.crossOrigin="",t.onload=()=>{t.width=t.naturalWidth,t.height=t.naturalHeight;const r=new ArrayBuffer(i*s*4);e.width=t.width,e.height=5e3;for(let n=0;n<i/5e3;n++){const i=new Float32Array(r,n*s*5e3*4,5e3*s);a.drawImage(t,0,5e3*n,t.width,5e3,0,0,t.width,5e3);const o=a.getImageData(0,0,e.width,e.height);for(let t=0;t<o.data.length/4;t++)i[t]=o.data[4*t]/255}this.datasetImages=new Float32Array(r),n()},t.src=c}),f=fetch(l),[u,h]=await Promise.all([d,f]);this.datasetLabels=new Uint8Array(await h.arrayBuffer()),this.trainIndices=tf.util.createShuffledIndices(r),this.testIndices=tf.util.createShuffledIndices(o),this.trainImages=this.datasetImages.slice(0,s*r),this.testImages=this.datasetImages.slice(s*r),this.trainLabels=this.datasetLabels.slice(0,n*r),this.testLabels=this.datasetLabels.slice(n*r)}nextTrainBatch(t){return this.nextBatch(t,[this.trainImages,this.trainLabels],()=>(this.shuffledTrainIndex=(this.shuffledTrainIndex+1)%this.trainIndices.length,this.trainIndices[this.shuffledTrainIndex]))}nextTestBatch(t){return this.nextBatch(t,[this.testImages,this.testLabels],()=>(this.shuffledTestIndex=(this.shuffledTestIndex+1)%this.testIndices.length,this.testIndices[this.shuffledTestIndex]))}nextBatch(t,e,a){const i=new Float32Array(t*s),r=new Uint8Array(t*n);for(let o=0;o<t;o++){const t=a(),c=e[0].slice(t*s,t*s+s);i.set(c,o*s);const l=e[1].slice(t*n,t*n+n);r.set(l,o*n)}return{xs:tf.tensor2d(i,[t,s]),labels:tf.tensor2d(r,[t,n])}}}document.addEventListener("DOMContentLoaded",async function(){const t=new d;await t.load(),await async function(t){const e=tfvis.visor().surface({name:"Input Data Examples",tab:"Input Data"}),a=t.nextTestBatch(20),s=a.xs.shape[0];for(let t=0;t<s;t++){const s=tf.tidy(()=>a.xs.slice([t,0],[1,a.xs.shape[1]]).reshape([28,28,1])),n=document.createElement("canvas");n.width=28,n.height=28,n.style="margin: 4px;",await tf.browser.toPixels(s,n),e.drawArea.appendChild(n),s.dispose()}}(t);const e=function(){const t=tf.sequential();t.add(tf.layers.conv2d({inputShape:[28,28,1],kernelSize:5,filters:8,strides:1,activation:"relu",kernelInitializer:"varianceScaling"})),t.add(tf.layers.maxPooling2d({poolSize:[2,2],strides:[2,2]})),t.add(tf.layers.conv2d({kernelSize:5,filters:16,strides:1,activation:"relu",kernelInitializer:"varianceScaling"})),t.add(tf.layers.maxPooling2d({poolSize:[2,2],strides:[2,2]})),t.add(tf.layers.flatten()),t.add(tf.layers.dense({units:10,kernelInitializer:"varianceScaling",activation:"softmax"}));const e=tf.train.adam();return t.compile({optimizer:e,loss:"categoricalCrossentropy",metrics:["accuracy"]}),t}();tfvis.show.modelSummary({name:"Model Architecture"},e),await async function(t,e){const a=tfvis.show.fitCallbacks({name:"Model Training",styles:{height:"1000px"}},["loss","val_loss","acc","val_acc"]),[s,n]=tf.tidy(()=>{const t=e.nextTrainBatch(5500);return[t.xs.reshape([5500,28,28,1]),t.labels]}),[i,r]=tf.tidy(()=>{const t=e.nextTestBatch(1e3);return[t.xs.reshape([1e3,28,28,1]),t.labels]});return t.fit(s,n,{batchSize:512,validationData:[i,r],epochs:10,shuffle:!0,callbacks:a})}(e,t),await async function(t,e){const[a,s]=u(t,e),n=await tfvis.metrics.perClassAccuracy(s,a);tfvis.show.perClassAccuracy({name:"Accuracy",tab:"Evaluation"},n,f),s.dispose()}(e,t),await async function(t,e){const[a,s]=u(t,e),n=await tfvis.metrics.confusionMatrix(s,a);tfvis.render.confusionMatrix({name:"Confusion Matrix",tab:"Evaluation"},{values:n},f),s.dispose()}(e,t)});const f=["0","1","2","3","4","5","6","7","8","9"];function u(t,e,a=500){const s=e.nextTestBatch(a),n=s.xs.reshape([a,28,28,1]),i=s.labels.argMax(1),r=t.predict(n).argMax(1);return n.dispose(),[r,i]}}]);